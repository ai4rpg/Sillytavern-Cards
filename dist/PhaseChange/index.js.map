{"version":3,"file":"index.js","mappings":"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","sources":["src://tavern_helper_template/src/PhaseChange/index.ts"],"sourcesContent":["$(() => {\n  // ===================================================================\n  // 集中管理所有变量路径，提升代码的可读性、健壮性与可维护性。\n  // ===================================================================\n  const PATHS = {\n    // user\n    CURRENT_PHASE: 'stat_data.user.current_phase[0]',\n    ACTION_POINTS: 'stat_data.user.action_points[0]',\n    ABILITIES: 'stat_data.user.special_abilities[0]',\n    BLESSING: 'stat_data.user.profile.bless_old_gods[0]',\n    SOLVED_CASES_COUNT: 'stat_data.user.profile.solved_cases_count[0]',\n    // world\n    CASE_NAME: 'stat_data.world.current_case.case_name[0]',\n    CASE_LOCATION: 'stat_data.world.current_case.case_location[0]',\n    DIFFICULTY_CLASS: 'stat_data.world.current_case.difficulty_class[0]',\n    OUT_OF_CONTROL: 'stat_data.world.current_case.out_of_control[0]',\n    // latent_variables\n    PHASE_CHANGED: 'stat_data.latent_variables.ejs_index.phase_changed[0]',\n    EXPERIENCE: 'stat_data.latent_variables.ejs_index.experience[0]',\n    CANDIDATE_QUALITIES: 'stat_data.latent_variables.ability_update.candidate_ability_qualities[0]',\n  } as const;\n\n  // ===================================================================\n  // 核心逻辑函数模块\n  // ===================================================================\n  /**\n   * 初始化候选能力的品质。\n   * @param {any} stats - stat_data 对象。\n   * @param {number} bias - 随机偏移量。\n   */\n  function initializeAbilityQualities(stats: any, bias: number = 0): void {\n    const blessing: string | undefined = _.get(stats, PATHS.BLESSING);\n\n    const DEFAULT_BIAS_MAP: Record<string, number> = { Bast: 0, Hypnos: 0, Nodens: 0 };\n    const BIAS_MAP: Record<string, Record<string, number>> = {\n      猫的庇护: { ...DEFAULT_BIAS_MAP, Bast: 5 },\n      面庞的庇护: { ...DEFAULT_BIAS_MAP, Hypnos: 5 },\n      隐者的庇护: { ...DEFAULT_BIAS_MAP, Nodens: 5 },\n    };\n\n    const BLESSING_BIASES = (blessing && BIAS_MAP[blessing]) || DEFAULT_BIAS_MAP;\n\n    const ABILITY_QUALITIES_WEIGHTED = [\n      ...Array(27).fill('普通'),\n      ...Array(9).fill('稀有'),\n      ...Array(3).fill('史诗'),\n      '传说',\n    ];\n    _.update(stats, PATHS.CANDIDATE_QUALITIES, (candidates: Record<string, string>) =>\n      _.mapValues(candidates, key => {\n        const max_bias = ABILITY_QUALITIES_WEIGHTED.length - 1;\n        const final_bias = Math.min(bias + (BLESSING_BIASES[key as string] || 0), max_bias);\n        return ABILITY_QUALITIES_WEIGHTED[_.random(final_bias, max_bias)];\n      }),\n    );\n    console.log(`已根据经验值和旧神的庇护抽选候选能力品质, 等待AI响应。`);\n  }\n\n  /**\n   * 根据难度等级初始化案件。\n   * @param {any} stats - stat_data 对象。\n   * @param {number} bias - 由经验值计算的难度偏移。\n   */\n  function initializeCase(stats: any, bias: number): void {\n    const difficulty_class = Math.max(1, Math.floor((Math.random() * 5 + bias + 2) / 3));\n    _.set(stats, PATHS.DIFFICULTY_CLASS, difficulty_class);\n    _.set(stats, PATHS.ACTION_POINTS, difficulty_class * 5 + 5);\n    _.set(stats, PATHS.OUT_OF_CONTROL, 50);\n  }\n\n  /** 清理案件相关的核心信息。*/\n  function clearCaseInfoProgress(stats: any): void {\n    _.set(stats, PATHS.CASE_NAME, '');\n    _.set(stats, PATHS.CASE_LOCATION, '');\n    _.set(stats, PATHS.DIFFICULTY_CLASS, 0);\n    _.set(stats, PATHS.ACTION_POINTS, 5);\n    _.set(stats, PATHS.OUT_OF_CONTROL, 0);\n  }\n\n  /** 重置所有非被动技能的使用状态。*/\n  function resetActiveSkills(stats: any): void {\n    const abilities: any[] = _.get(stats, PATHS.ABILITIES, []);\n    let resetCount = 0;\n    abilities.forEach(ability => {\n      if (ability && _.get(ability, 'is_passive[0]') === false && _.get(ability, 'is_used[0]') === true) {\n        _.set(ability, 'is_used[0]', false);\n        resetCount++;\n      }\n    });\n    if (resetCount > 0) {\n      console.log(`已成功重置 ${resetCount} 个主动技能的使用状态。`);\n    }\n  }\n\n  /** 根据当前阶段决定是否需要计算新的 phase_changed **/\n  function changedIndexUpdate(stats: any): void {\n    const current_phase: string = _.get(stats, PATHS.CURRENT_PHASE);\n    const action_points: number = _.get(stats, PATHS.ACTION_POINTS);\n    const out_of_control: number = _.get(stats, PATHS.OUT_OF_CONTROL);\n    const PHASE_TRANSITION_RULES: Record<string, () => number> = {\n      日常阶段: () => (action_points <= 0 ? 2 : -1),\n      侦破阶段: () => (out_of_control <= 0 ? 3 : action_points <= 0 ? 4 : -1),\n    };\n\n    let phase_changed: number = _.get(stats, PATHS.PHASE_CHANGED);\n\n    if (phase_changed === 0) {\n      phase_changed = 1;\n    } else if (phase_changed === -1) {\n      const rule = PHASE_TRANSITION_RULES[current_phase];\n      if (rule) phase_changed = rule();\n    } else if (phase_changed === 1 || phase_changed === 2) {\n      phase_changed = -1;\n    } else if (phase_changed >= 3) {\n      phase_changed = 1;\n    }\n\n    _.set(stats, PATHS.PHASE_CHANGED, phase_changed);\n  }\n\n  function statDataUpdate(stats: any): void {\n    const difficulty_class: number = _.get(stats, PATHS.DIFFICULTY_CLASS);\n    const experience: number = _.get(stats, PATHS.EXPERIENCE);\n    const LEVEL_RULE = (expr: number): number => {\n      for (let i = 0; i < 5; i++) {\n        expr -= i * 3;\n        if (expr <= 0) return i;\n      }\n      return 5;\n    };\n\n    changedIndexUpdate(stats);\n    const phase_changed: number = _.get(stats, PATHS.PHASE_CHANGED);\n\n    if (phase_changed === 1) {\n      resetActiveSkills(stats);\n      clearCaseInfoProgress(stats);\n      initializeAbilityQualities(stats, experience);\n      _.set(stats, PATHS.CURRENT_PHASE, '日常阶段');\n    } else if (phase_changed === 2) {\n      _.set(stats, PATHS.CURRENT_PHASE, '侦破阶段');\n      const level = LEVEL_RULE(experience);\n      initializeCase(stats, level);\n    } else if (phase_changed >= 3) {\n      _.update(stats, PATHS.EXPERIENCE, (expr: number) => expr + difficulty_class * 3);\n      _.update(stats, PATHS.SOLVED_CASES_COUNT, (count: number) => count + 4 - phase_changed);\n      _.update(stats, PATHS.EXPERIENCE, (expr: number) => expr + difficulty_class * (9 - phase_changed * 2));\n      _.set(stats, PATHS.CURRENT_PHASE, '后日谈阶段');\n      _.set(stats, PATHS.ACTION_POINTS, 1);\n    }\n  }\n\n  // ===================================================================\n  // 主事件监听器\n  // ===================================================================\n  eventOn('mag_variable_update_ended', async (variables: any) => {\n    try {\n      const last_message_id = getLastMessageId();\n      const messages = getChatMessages(last_message_id);\n      if (!messages || messages.length === 0) {\n        console.error('无法加载最新楼层消息。');\n        return;\n      }\n      const role = messages[0].role;\n      if (role === 'user') {\n        statDataUpdate(variables);\n        console.log('后台状态更新已成功应用。');\n      }\n    } catch (e) {\n      console.error('脚本错误:', e);\n    }\n  });\n  console.log(\"世界状态后台自动化脚本已加载并监听 'mag_variable_update_ended' 事件。\");\n});\n"],"names":["$","PATHS","statDataUpdate","stats","difficulty_class","_","get","experience","current_phase","action_points","out_of_control","PHASE_TRANSITION_RULES","phase_changed","rule","set","changedIndexUpdate","abilities","resetCount","forEach","ability","console","log","resetActiveSkills","clearCaseInfoProgress","bias","blessing","DEFAULT_BIAS_MAP","Bast","Hypnos","Nodens","BIAS_MAP","BLESSING_BIASES","ABILITY_QUALITIES_WEIGHTED","Array","fill","update","candidates","mapValues","key","max_bias","length","final_bias","Math","min","random","initializeAbilityQualities","max","floor","initializeCase","expr","i","LEVEL_RULE","count","eventOn","async","variables","last_message_id","getLastMessageId","messages","getChatMessages","error","role","e"],"sourceRoot":""}